<?phpuse Longman\TelegramBot\Request;/** * Created by PhpStorm. * User: Лука * Date: 07.05.2019 * Time: 21:54 */class DBConfig{    var $db_host = "localhost";    var $db_name = "cs82023_arkan";    var $db_user = "cs82023_arkan";    var $db_pass = "WWG6GySP";    var $db_con = null;    public function __construct()    {        try {            $this->db_con = new PDO("mysql:host={$this->db_host};dbname={$this->db_name}", $this->db_user, $this->db_pass);            // $this->db_con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);            $this->db_con->exec("set names utf8");        } catch (PDOException $e) {        }    }    public function addUser($id, $name, $username)    {        try {            $request = $this->db_con->prepare('INSERT INTO `telegram_db`(`telegram_id`,`telegram_name`,`telegram_username`,`register_date`) VALUES (:param1,:param2,:param3,:param4)');            $request->execute(array(                ':param1' => $id,                ':param2' => $name,                ':param3' => $username,                ':param4' => (new DateTime('now'))->format('Y-m-d H:i:s')            ));        } catch (\mysql_xdevapi\Exception $exception) {            Request::sendMessage([                'chat_id' => $id,                'text' => '$exception->getMessage()'            ]);        }    }    public function userExists($id)    {        $request = $this->db_con->prepare('select count(*) as Count from `telegram_db` where `telegram_id` = :param1');        $request->execute(array(            ':param1' => $id        ));        $result = $request->fetchAll(PDO::FETCH_OBJ);        $result = $result[0]->Count;        return $result > 0;    }    public function checkTelegramKey($hash)    {        $request = $this->db_con->prepare('select * from `ar_mbrs` where `telegram_hash` = :param1 limit 1');        $request->execute(array(            ':param1' => $hash        ));        $result = $request->fetchAll(PDO::FETCH_OBJ);        return count($result) == 0 ? null : $result[0];    }    public function getUser($chat_id)    {        $request = $this->db_con->prepare('select * from `telegram_db` where `telegram_id`=:param1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetchAll(PDO::FETCH_ASSOC);        return $result[0];    }    public function getStep($chat_id)    {        $request = $this->db_con->prepare('select `step` from `telegram_db` where `telegram_id`=:param1 limit 1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetch(PDO::FETCH_ASSOC);        return $result['step'];    }    public function setStep($chat_id, $step)    {        $request = $this->db_con->prepare('UPDATE `telegram_db` SET `step`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $step,            ':param2' => $chat_id        ));    }    public function setValue($chat_id, $column, $value)    {        $request = $this->db_con->prepare("UPDATE `telegram_db` SET `$column`=:param1 WHERE `telegram_id`=:param2");        $request->execute(array(            ':param1' => $value,            ':param2' => $chat_id        ));    }    public function setUserID($chat_id, $id,$both = true)    {        if($both)        {            $request = $this->db_con->prepare('UPDATE `telegram_db` SET `user_id`=:param1 WHERE `telegram_id`=:param2');            $request->execute(array(':param1' => $id, ':param2' => $chat_id));        }        $request = $this->db_con->prepare('UPDATE `ar_mbrs` SET `telegram_id`=:param2 WHERE `id`=:param1');        $request->execute(array(            ':param1' => $id,            ':param2' => $chat_id        ));    }    function writeDump($item)    {        ob_flush();        ob_start();        var_dump($item);        file_put_contents("dump.txt", ob_get_flush());    }}